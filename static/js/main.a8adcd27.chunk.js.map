{"version":3,"sources":["components/TaskList.js","components/TaskForm.js","App.js","index.js"],"names":["tasks","setViewTask","viewTask","setTasks","useState","useEffect","newTasks","map","task","id","active","className","i","cls","key","Math","random","onClick","moment","date","format","title","TaskForm","body","setTask","editMode","setEditMode","handleChange","e","newTask","target","name","value","style","width","minHeight","role","type","onSubmit","preventDefault","t","uuidv4","Date","onChange","placeholder","required","cols","rows","App","JSON","parse","maxHeight","length","TaskList","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a8adcd27.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport moment from 'moment';\r\n\r\nexport default function ({tasks, setViewTask, viewTask, setTasks}) {\r\n\r\n\r\n\r\n    const [cls, setCls] = useState();\r\n\r\n    useEffect(() => {\r\n\r\n        let newTasks = [...tasks];\r\n\r\n        newTasks = newTasks.map(task => {\r\n\r\n            if (viewTask && task.id === viewTask.id) {\r\n                task.active = true;\r\n            } else {\r\n                task.active = false;\r\n            }\r\n\r\n            return task;\r\n        })\r\n\r\n        setTasks(newTasks);\r\n    }, [viewTask])\r\n\r\n    useEffect(()=>{\r\n\r\n        // localStorage.setItem('list', JSON.stringify(tasks))\r\n\r\n    },[tasks])\r\n\r\n    return (\r\n        <ul className=\"list-group\">\r\n\r\n            {tasks.map((task, i) => {\r\n\r\n                let cls = 'list-group-item  d-flex justify-content-between align-items-center';\r\n\r\n                if (task.active) {\r\n                    cls = 'list-group-item list-group-item-dark d-flex justify-content-between align-items-center';\r\n                }\r\n\r\n                return (\r\n                    <li key={Math.random()} onClick={() => {\r\n                        setViewTask(task)\r\n                    }}\r\n                        className={cls}\r\n                    >\r\n                        <span className=\"badge badge-primary badge-pill\">{moment(task.date).format(\"MMM Do YY\")}</span>\r\n                        {task.title}\r\n                    </li>\r\n                )\r\n            })}\r\n        </ul>\r\n    );\r\n}","import React, {useEffect, useState} from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\n\r\n\r\nexport default function TaskForm({tasks, setTasks, viewTask, setViewTask}) {\r\n\r\n    const [task, setTask] = useState({title: '', body: ''});\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        if (viewTask) {\r\n\r\n            setTask(viewTask)\r\n        }\r\n\r\n    }, [viewTask])\r\n\r\n    const formSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        if (editMode) {\r\n\r\n\r\n            let newTasks = [...tasks];\r\n\r\n            newTasks = newTasks.map(t => {\r\n\r\n                if (t.id === viewTask.id) {\r\n\r\n                    t.title = task.title;\r\n                    t.body = task.body;\r\n                }\r\n\r\n                return t;\r\n            })\r\n\r\n\r\n            setTasks(newTasks);\r\n\r\n\r\n        } else {\r\n\r\n\r\n            task.id = uuidv4();\r\n            task.date = new Date();\r\n\r\n            setTasks([task, ...tasks]);\r\n\r\n            setTask({title: '', body: ''});\r\n        }\r\n\r\n    };\r\n\r\n    const handleChange = e => {\r\n\r\n        const newTask = {...task};\r\n        newTask[e.target.name] = e.target.value;\r\n\r\n        setTask(newTask)\r\n\r\n    };\r\n\r\n    if (viewTask && !editMode) {\r\n\r\n        return (\r\n\r\n            <div className=\"mx-auto card text-white bg-dark mb-3\"\r\n                 style={{width: '100%', minHeight: '400px'}}>\r\n\r\n\r\n                <div className=\"card-header\">Task Details</div>\r\n                <div className=\"card-body\">\r\n\r\n                    <h5 className=\"card-title\">{viewTask.title}</h5>\r\n\r\n\r\n                    <br/>\r\n                    <p className=\"card-text\">{viewTask.body}</p>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <button type=\"button\" onClick={() => {\r\n                            setEditMode(true)\r\n                        }} className=\"btn btn-info\">Edit\r\n                        </button>\r\n                        <button type=\"button\" onClick={() => {\r\n                            setViewTask(null);\r\n                            setTask({title: '', body: ''});\r\n                            setEditMode(false)\r\n                        }} className=\"btn btn-secondary\">Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n\r\n    }\r\n\r\n    return (\r\n\r\n\r\n        <div className=\"mx-auto card text-white bg-dark mb-3\"\r\n             style={{width: '100%', minHeight: '400px'}}>\r\n            <form onSubmit={formSubmit}>\r\n\r\n                <div className=\"card-header\">{editMode ? 'Edit Task' : 'Add New Task'}</div>\r\n                <div className=\"card-body\">\r\n\r\n\r\n                    <input type=\"text\" name={\"title\"} value={task.title} className={\"form-control\"}\r\n                           onChange={handleChange}\r\n                           placeholder={\"Title (example: buy grocery, pay bill etc)\"} required/>\r\n\r\n                    <br/>\r\n                    <textarea name=\"body\" cols=\"30\" rows=\"7\" className={\"form-control\"}\r\n                              placeholder={\"Task Info\"} value={task.body} onChange={handleChange}/>\r\n                </div>\r\n                <div className=\"card-footer\">\r\n\r\n                    <div className=\"btn-group\" role=\"group\">\r\n                        <button type=\"submit\" className=\"btn btn-success\">Save</button>\r\n                        <button type=\"button\" onClick={() => {\r\n                            setViewTask(null);\r\n                            setTask({title: '', body: ''});\r\n                            setEditMode(false)\r\n                        }} className=\"btn btn-secondary\">Cancel\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n}\r\n","import React, {useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport TaskList from \"./components/TaskList\";\nimport TaskForm from \"./components/TaskForm\";\n\n\nfunction App() {\n\n\n    const [tasks, setTasks] = useState(JSON.parse('[{\"title\":\"Buy Bobber\",\"body\":\"One day I will\",\"id\":\"6ecd36b0-50b9-48af-a817-72a3c91eeec3\",\"date\":\"2020-04-14T16:58:36.955Z\"},{\"title\":\"Buy Ferrari\",\"body\":\"Some day I will\",\"id\":\"c6c7ba3e-7f90-4502-a7b1-bf5ec4d4ca10\",\"date\":\"2020-04-14T16:58:23.278Z\",\"active\":false}]'));\n    const [viewTask, setViewTask] = useState(null);\n\n\n    return (\n        <div className=\"container my-5\">\n\n            <h2 className=\"display-4 text-center\">Task List</h2>\n\n            <div className=\"card bg-light mt-5 pt-2\" style={{minHeight: '500px', maxHeight: '500px'}}>\n\n                <div className=\"card-body\">\n\n                    <div className=\"row\">\n\n                        <div className=\"col-md-6\">\n\n\n                            {!tasks.length ? <div className={\"text-center\"}>\n                                🙄 I have no Tasks\n                            </div> : null}\n                            <TaskList tasks={tasks} viewTask={viewTask} setTasks={setTasks} setViewTask={setViewTask}/>\n\n\n                        </div>\n                        <div className=\"col-md-6 \">\n\n                            <TaskForm tasks={tasks} setTasks={setTasks} viewTask={viewTask} setViewTask={setViewTask}/>\n\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n"],"sourceRoot":""}